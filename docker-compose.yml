services:
  mariadb:
    image: mariadb:lts
    container_name: flyingfish_db
    environment:
      MARIADB_AUTO_UPGRADE: '1'
      MARIADB_INITDB_SKIP_TZINFO: '1'
      MYSQL_ROOT_PASSWORD: "${MARIADB_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: "${MARIADB_DATABASE}"
    healthcheck:
      test: [ "CMD", "mariadb", "-u${MARIADB_ROOT_USERNAME}", "-p${MARIADB_ROOT_PASSWORD}", "-e", "use ${MARIADB_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - flyingfishDbData:/var/lib/mysql
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      flyingfishNet:
          ipv4_address: 10.103.0.2
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"

  influxdb:
    image: influxdb:latest
    container_name: flyingfish_influxdb
    volumes:
      - flyingfishInfluxdbData:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    ports:
      - "127.0.0.1:8086:8086"
    networks:
      flyingfishNet:
        ipv4_address: 10.103.0.5
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
          mariadb:
            condition: service_healthy

  redis:
    image: redis:7.2-alpine
    container_name: flyingfish_redis
    volumes:
      - flyingfishRedisData:/data
    ports:
      - '127.0.0.1:6379:6379'
    command: "redis-server --save ${REDIS_SAVE} --loglevel ${REDIS_LOGLEVEL} --requirepass ${REDIS_REQUIREPASS}"
    networks:
      flyingfishNet:
        ipv4_address: 10.103.0.7
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
      mariadb:
        condition: service_healthy

  flyingfish:
    image: flyingfish:v1.2
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        NPM_REGISTRY: ${NPM_REGISTRY}
    container_name: flyingfish_service
    volumes:
      - ./nginx:/opt/flyingfish/nginx:rw
      - flyingfishLetsencrypt:/etc/letsencrypt:rw
      - flyingfish:/var/lib/flyingfish:rw
      - ./backend/dist:/opt/flyingfish/backend/dist
      - ./backend/node_modules:/opt/flyingfish/backend/node_modules
      - ./backend/package.json:/opt/flyingfish/backend/package.json
      - ./frontend/assets:/opt/flyingfish/frontend/assets
      - ./frontend/dist:/opt/flyingfish/frontend/dist
      - ./frontend/src:/opt/flyingfish/frontend/src
      - ./node_modules:/opt/flyingfish/node_modules
      - ./package.json:/opt/flyingfish/package.json
    environment:
      FLYINGFISH_DB_MYSQL_USERNAME: "${MARIADB_ROOT_USERNAME}"
      FLYINGFISH_DB_MYSQL_PASSWORD: "${MARIADB_ROOT_PASSWORD}"
      FLYINGFISH_DB_MYSQL_DATABASE: "${MARIADB_DATABASE}"
      FLYINGFISH_DB_INFLUX_URL: "${INFLUXDB_URL}"
      FLYINGFISH_DB_INFLUX_TOKEN: "${INFLUXDB_ADMIN_TOKEN}"
      FLYINGFISH_DB_INFLUX_ORG: "${INFLUXDB_ORG}"
      FLYINGFISH_DB_INFLUX_BUCKET: "${INFLUXDB_BUCKET}"
      FLYINGFISH_HTTPSERVER_PORT: "${HTTPSERVER_PORT}"
      FLYINGFISH_LOGGING_LEVEL: "${LOGGING_LEVEL}"
      FLYINGFISH_HIMHIP_USE: "${HIMHIP_USE}"
      FLYINGFISH_HIMHIP_SECRET: "${HIMHIP_SECRET}"
      FLYINGFISH_DYNDNSSERVER_ENABLE: "${DYNDNSSERVER_ENABLE}"
      FLYINGFISH_DB_REDIS_PASSWORD: "${REDIS_REQUIREPASS}"
    ports:
      - "443:443"
      - "80:80"
      - "5333:53/udp"
      - "5333:53/tcp"
      - "${HTTPSERVER_PORT}:${HTTPSERVER_PORT}"
      - "1900:1900"
      - "10901:10901"
      - "9229:9229"
    networks:
      flyingfishNet:
        ipv4_address: 10.103.0.3
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
      influxdb:
        condition: service_started
    command:
      - node
      - "--inspect-brk=0.0.0.0:9229"
      - "backend/dist/main.js"
      - "--envargs=1"

  himhip:
    image: flyingfish_himip:v1.0
    build:
      context: ./
      dockerfile: ./himhip/Dockerfile
      args:
        NPM_REGISTRY: ${NPM_REGISTRY}
    container_name: flyingfish_himhip
    environment:
      FLYINGFISH_SECRET: "${HIMHIP_SECRET}"
      FLYINGFISH_SERVER_PORT: "${HTTPSERVER_PORT}"
      FLYINGFISH_LOGGING_LEVEL: "${LOGGING_LEVEL}"
      FLYINGFISH_DB_REDIS_PASSWORD: "${REDIS_REQUIREPASS}"
    network_mode: host
    cap_add:
      - ALL
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
      redis:
        condition: service_started
      flyingfish:
        condition: service_started

#  iptable:
#    image: flyingfish_iptable:v1.0
#    build:
#      context: ./iptable/
#    container_name: flyingfish_iptable
#    volumes:
#      - ./iptable/dist:/opt/app/dist
#      - ./iptable/node_modules:/opt/app/node_modules
#      - ./iptable/package.json:/opt/app/package.json
#    command:
#      - node
#      - "--inspect-brk=0.0.0.0:9229"
#      - "dist/main.js"
#      - "--reciverurl=https://10.103.0.3:3000/iptable/list"
#      - "--secret=${IPTABLE_SECURE_TOKEN}"
#    network_mode: host
#    cap_add:
#      - ALL
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "500k"
#        max-file: "50"
#    depends_on:
#      - flyingfish

  sshremote:
    image: flyingfish_ssh:v1.0
    build:
      context: ./
      dockerfile: ./sshserver/Dockerfile
      args:
        NPM_REGISTRY: ${NPM_REGISTRY}
    container_name: flyingfish_ssh
    volumes:
      - flyingfishSsh:/opt/flyingfish/ssh:rw
      - ./sshserver/dist:/opt/flyingfish/sshserver/dist
      - ./sshserver/node_modules:/opt/flyingfish/sshserver/node_modules
      - ./sshserver/package.json:/opt/flyingfish/sshserver/package.json
      - ./node_modules:/opt/flyingfish/node_modules
      - ./package.json:/opt/flyingfish/package.json
    environment:
      FLYINGFISH_DB_MYSQL_USERNAME: "${MARIADB_ROOT_USERNAME}"
      FLYINGFISH_DB_MYSQL_PASSWORD: "${MARIADB_ROOT_PASSWORD}"
      FLYINGFISH_DB_MYSQL_DATABASE: "${MARIADB_DATABASE}"
      FLYINGFISH_HTTPSERVER_PORT: "${HTTPSERVER_PORT}"
      FLYINGFISH_LOGGING_LEVEL: "${LOGGING_LEVEL}"
    ports:
      - "2222:22"
    networks:
      flyingfishNet:
        ipv4_address: 10.103.0.4
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
      flyingfish:
        condition: service_started

  ddnsserver:
    image: flyingfish_ddns:v1.0
    build:
      context: ./
      dockerfile: ./ddnsserver/Dockerfile
      args:
        NPM_REGISTRY: ${NPM_REGISTRY}
    container_name: flyingfish_ddns
    volumes:
      - ./ddnsserver/dist:/opt/flyingfish/ddnsserver/dist
      - ./ddnsserver/node_modules:/opt/flyingfish/ddnsserver/node_modules
      - ./ddnsserver/package.json:/opt/flyingfish/ddnsserver/package.json
      - ./node_modules:/opt/flyingfish/node_modules
      - ./package.json:/opt/flyingfish/package.json
    environment:
      FLYINGFISH_DB_MYSQL_USERNAME: "${MARIADB_ROOT_USERNAME}"
      FLYINGFISH_DB_MYSQL_PASSWORD: "${MARIADB_ROOT_PASSWORD}"
      FLYINGFISH_DB_MYSQL_DATABASE: "${MARIADB_DATABASE}"
      FLYINGFISH_LOGGING_LEVEL: "${LOGGING_LEVEL}"
#    ports:
#      - "9229:9229"
    networks:
      flyingfishNet:
        ipv4_address: 10.103.0.6
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
      flyingfish:
        condition: service_started
#    command:
#      - node
#      - "--inspect-brk=0.0.0.0:9229"
#      - "ddnsserver/dist/main.js"
#      - "--envargs=1"

#  vpnserver:
#    image: flyingfish_vpn:v1.2
#    build:
#      context: ./
#      dockerfile: ./vpn/Dockerfile
#    container_name: flyingfish_vpn
#    volumes:
#      - ./vpn/dist:/opt/app/dist
#    privileged: true
#    network_mode: host
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "500k"
#        max-file: "50"
#    depends_on:
#      - mariadb

#  onionhat:
#    image: flyingfish_onionhat:v1.0
#    build:
#      context: ./onionhat/
#    container_name: flyingfish_onionhat
#    volumes:
#      - ./config.json:/opt/app/config.json
#    ports:
#      - "9050:9050"
#    networks:
#      flyingfishNet:
#        ipv4_address: 10.103.0.5
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "500k"
#        max-file: "50"
#    depends_on:
#      - mariadb
#      - flyingfish

volumes:
  flyingfishDbData:
    driver: local
  flyingfishInfluxdbData:
    driver: local
  flyingfish:
    driver: local
  flyingfishLetsencrypt:
    driver: local
  flyingfishSsh:
    driver: local
  flyingfishRedisData:
    driver: local

networks:
  flyingfishNet:
    driver: bridge
    ipam:
      config:
        -  subnet: 10.103.0.0/16